{"ast":null,"code":"var _jsxFileName = \"/Users/nathanwai/Desktop/tryagain/SerenasBirthdaySurprise/src/Sudoku.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialSudoku = [[5, 3, 4, 6, 7, 8, 9, 1, 2], [6, 7, 2, 1, 9, 5, 3, 4, 8], [1, 9, 8, 3, 4, 2, 5, 6, 7], [8, 5, 9, 7, 6, 1, 4, 2, 3], [4, 2, 6, 8, 5, 3, 7, 9, 1], [7, 1, 3, 9, 2, 4, 8, 5, 6], [9, 6, 1, 5, 3, 7, 2, 8, 4], [2, 8, 7, 4, 1, 9, 6, 3, 5], [3, 4, 5, 2, 8, 6, 1, 7, 0] // Only one number missing\n];\nfunction Sudoku({\n  onComplete\n}) {\n  _s();\n  const [puzzle, setPuzzle] = useState(initialSudoku);\n  const [timeLeft, setTimeLeft] = useState(10 * 60); // 10 minutes in seconds\n  const [selectedCell, setSelectedCell] = useState(null);\n  const [attempts, setAttempts] = useState(1);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(timer);\n          resetPuzzle();\n          return 10 * 60; // Reset to 10 minutes\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [attempts]);\n  const resetPuzzle = () => {\n    setPuzzle(initialSudoku.map(row => [...row]));\n    setSelectedCell(null);\n    setAttempts(attempts + 1);\n  };\n  const handleInputChange = (row, col, value) => {\n    const newPuzzle = puzzle.map(r => [...r]);\n    newPuzzle[row][col] = value === '' ? 0 : parseInt(value, 10);\n    setPuzzle(newPuzzle);\n    if (isSudokuComplete(newPuzzle)) {\n      onComplete(true);\n    }\n  };\n  const isSudokuComplete = puzzle => {\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (puzzle[i][j] === 0) return false;\n      }\n    }\n    return true; // For simplicity, we're not checking if the solution is correct\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n  };\n  const handleCellFocus = (row, col) => {\n    setSelectedCell(`${row}-${col}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Sudoku\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Final Challenge: Sudoku\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Complete the puzzle to unlock your gift!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time remaining: \", formatTime(timeLeft)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Attempt: \", attempts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sudoku-grid\",\n      children: puzzle.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sudoku-row\",\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          inputMode: \"numeric\",\n          pattern: \"[1-9]*\",\n          maxLength: \"1\",\n          value: cell === 0 ? '' : cell,\n          onChange: e => handleInputChange(rowIndex, colIndex, e.target.value),\n          onFocus: () => handleCellFocus(rowIndex, colIndex),\n          className: `\n                  ${initialSudoku[rowIndex][colIndex] !== 0 ? 'initial' : ''}\n                  ${selectedCell === `${rowIndex}-${colIndex}` ? 'selected' : ''}\n                `,\n          readOnly: initialSudoku[rowIndex][colIndex] !== 0\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Sudoku, \"FrsWgKrr0c1oxh0uSBq2KXEMe5Q=\");\n_c = Sudoku;\nexport default Sudoku;\nvar _c;\n$RefreshReg$(_c, \"Sudoku\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","initialSudoku","Sudoku","onComplete","_s","puzzle","setPuzzle","timeLeft","setTimeLeft","selectedCell","setSelectedCell","attempts","setAttempts","timer","setInterval","prevTime","clearInterval","resetPuzzle","map","row","handleInputChange","col","value","newPuzzle","r","parseInt","isSudokuComplete","i","j","formatTime","seconds","minutes","Math","floor","remainingSeconds","handleCellFocus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rowIndex","cell","colIndex","type","inputMode","pattern","maxLength","onChange","e","target","onFocus","readOnly","_c","$RefreshReg$"],"sources":["/Users/nathanwai/Desktop/tryagain/SerenasBirthdaySurprise/src/Sudoku.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst initialSudoku = [\n    [5, 3, 4, 6, 7, 8, 9, 1, 2],\n    [6, 7, 2, 1, 9, 5, 3, 4, 8],\n    [1, 9, 8, 3, 4, 2, 5, 6, 7],\n    [8, 5, 9, 7, 6, 1, 4, 2, 3],\n    [4, 2, 6, 8, 5, 3, 7, 9, 1],\n    [7, 1, 3, 9, 2, 4, 8, 5, 6],\n    [9, 6, 1, 5, 3, 7, 2, 8, 4],\n    [2, 8, 7, 4, 1, 9, 6, 3, 5],\n    [3, 4, 5, 2, 8, 6, 1, 7, 0]  // Only one number missing\n  ];\n\nfunction Sudoku({ onComplete }) {\n  const [puzzle, setPuzzle] = useState(initialSudoku);\n  const [timeLeft, setTimeLeft] = useState(10 * 60); // 10 minutes in seconds\n  const [selectedCell, setSelectedCell] = useState(null);\n  const [attempts, setAttempts] = useState(1);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft((prevTime) => {\n        if (prevTime <= 1) {\n          clearInterval(timer);\n          resetPuzzle();\n          return 10 * 60; // Reset to 10 minutes\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [attempts]);\n\n  const resetPuzzle = () => {\n    setPuzzle(initialSudoku.map(row => [...row]));\n    setSelectedCell(null);\n    setAttempts(attempts + 1);\n  };\n\n  const handleInputChange = (row, col, value) => {\n    const newPuzzle = puzzle.map((r) => [...r]);\n    newPuzzle[row][col] = value === '' ? 0 : parseInt(value, 10);\n    setPuzzle(newPuzzle);\n\n    if (isSudokuComplete(newPuzzle)) {\n      onComplete(true);\n    }\n  };\n\n  const isSudokuComplete = (puzzle) => {\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (puzzle[i][j] === 0) return false;\n      }\n    }\n    return true; // For simplicity, we're not checking if the solution is correct\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n  };\n\n  const handleCellFocus = (row, col) => {\n    setSelectedCell(`${row}-${col}`);\n  };\n\n  return (\n    <div className=\"Sudoku\">\n      <h2>Final Challenge: Sudoku</h2>\n      <p>Complete the puzzle to unlock your gift!</p>\n      <p>Time remaining: {formatTime(timeLeft)}</p>\n      <p>Attempt: {attempts}</p>\n      <div className=\"sudoku-grid\">\n        {puzzle.map((row, rowIndex) => (\n          <div key={rowIndex} className=\"sudoku-row\">\n            {row.map((cell, colIndex) => (\n              <input\n                key={`${rowIndex}-${colIndex}`}\n                type=\"text\"\n                inputMode=\"numeric\"\n                pattern=\"[1-9]*\"\n                maxLength=\"1\"\n                value={cell === 0 ? '' : cell}\n                onChange={(e) => handleInputChange(rowIndex, colIndex, e.target.value)}\n                onFocus={() => handleCellFocus(rowIndex, colIndex)}\n                className={`\n                  ${initialSudoku[rowIndex][colIndex] !== 0 ? 'initial' : ''}\n                  ${selectedCell === `${rowIndex}-${colIndex}` ? 'selected' : ''}\n                `}\n                readOnly={initialSudoku[rowIndex][colIndex] !== 0}\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Sudoku;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}